# coding=utf-8

import matplotlib.pyplot as plt
import numpy as np
from AutoTest.myfunction.matplotlib_setting import __init__


def max_minus_min(lists):
    print(max(lists) - min(lists))


def create_image():
    # 初始化数据可视化类
    __init__()
    plt.figure(1, dpi=120)
    plt.title('oppoR7测试数据')
    y_ticks = np.arange(0, 1200, 50)
    plt.yticks(y_ticks)
    plt.xlabel('样本数(200组)')
    plt.ylabel('启动时间(ms)')
    plt.plot(list1, 'r', label='back_306')
    plt.plot(list2, 'g', label='home_306')
    plt.plot(list3, 'b', label='force_306')
    plt.legend()
    plt.grid(color='skyblue')
    plt.show()


# oppoR7的600组启动时间数据（3.0.6版本）
list1 = [202, 195, 193, 202, 186, 193, 187, 189, 236, 194, 190, 199, 203, 203, 176, 190, 195, 190, 217, 221, 191, 197,
         209, 198, 196, 194, 177, 194, 207, 200, 257, 202, 192, 187, 213, 213, 220, 211, 205, 216, 224, 215, 192, 195,
         183, 210, 190, 196, 187, 195, 192, 191, 240, 196, 186, 193, 195, 209, 201, 188, 202, 189, 200, 205, 193, 190,
         196, 202, 188, 190, 201, 190, 193, 193, 222, 198, 206, 192, 191, 187, 199, 191, 195, 203, 195, 216, 222, 192,
         196, 194, 199, 192, 187, 217, 198, 190, 212, 203, 204, 193, 201, 203, 191, 184, 203, 196, 179, 222, 198, 200,
         185, 189, 202, 189, 187, 190, 203, 188, 219, 194, 179, 200, 190, 205, 199, 202, 202, 192, 190, 224, 191, 195,
         193, 203, 208, 237, 206, 214, 214, 214, 244, 180, 199, 216, 199, 203, 198, 201, 199, 186, 188, 229, 192, 197,
         194, 207, 189, 202, 196, 206, 190, 191, 223, 192, 209, 192, 215, 203, 186, 207, 187, 195, 182, 215, 198, 189,
         197, 199, 207, 195, 186, 202, 188, 192, 213, 189, 197, 188, 192, 207, 191, 195, 190, 205, 187, 234, 191, 191,
         192, 191]
list2 = [148, 148, 140, 139, 160, 149, 154, 136, 143, 153, 161, 147, 142, 160, 213, 133, 150, 143, 145, 141, 168, 166,
         177, 156, 139, 151, 139, 145, 142, 154, 201, 165, 167, 169, 191, 165, 162, 200, 183, 190, 180, 137, 135, 194,
         150, 149, 216, 141, 148, 146, 152, 123, 160, 172, 164, 174, 151, 130, 144, 161, 149, 147, 208, 147, 144, 174,
         152, 131, 144, 149, 143, 133, 148, 163, 139, 151, 193, 157, 194, 158, 142, 157, 139, 138, 169, 150, 142, 156,
         150, 145, 145, 158, 130, 142, 208, 146, 142, 152, 186, 140, 151, 172, 138, 140, 138, 135, 151, 135, 147, 184,
         223, 139, 155, 148, 150, 137, 147, 155, 143, 147, 171, 152, 150, 158, 132, 189, 199, 176, 149, 144, 132, 174,
         154, 141, 140, 188, 179, 161, 181, 181, 155, 203, 231, 152, 166, 143, 143, 151, 172, 153, 162, 191, 152, 207,
         148, 133, 135, 138, 211, 144, 141, 154, 149, 143, 176, 175, 136, 142, 156, 138, 150, 134, 170, 144, 205, 185,
         166, 153, 148, 132, 165, 164, 150, 152, 147, 146, 175, 158, 140, 139, 194, 149, 149, 158, 142, 146, 148, 190,
         153, 150]
list3 = [1006, 968, 988, 1004, 972, 958, 954, 970, 992, 965, 989, 995, 977, 994, 955, 962, 980, 984, 972, 979, 973,
         978, 974, 986, 1028, 987, 1008, 947, 963, 977, 1004, 964, 975, 990, 976, 1004, 964, 983, 979, 948, 976, 974,
         981, 967, 975, 979, 999, 970, 966, 959, 969, 1002, 968, 971, 961, 999, 1013, 1000, 989, 970, 993, 955, 967,
         978, 990, 973, 980, 998, 1014, 988, 999, 965, 952, 966, 1001, 965, 971, 975, 980, 1044, 969, 980, 1007, 978,
         995, 968, 1008, 959, 969, 960, 999, 977, 985, 957, 972, 996, 981, 991, 959, 982, 1005, 996, 988, 988, 988,
         1005, 987, 992, 979, 969, 980, 988, 999, 996, 1013, 962, 977, 969, 994, 983, 992, 1007, 1002, 1013, 978, 985,
         979, 984, 994, 973, 981, 973, 1012, 969, 1022, 1008, 982, 974, 973, 983, 979, 999, 986, 990, 985, 1008, 996,
         994, 964, 986, 977, 987, 959, 971, 975, 967, 988, 978, 968, 999, 1003, 998, 975, 980, 994, 970, 967, 1005,
         969, 1007, 961, 961, 967, 980, 976, 965, 982, 993, 1032, 1001, 981, 971, 997, 967, 977, 972, 956, 1013, 981,
         1010, 989, 969, 988, 966, 954, 1003, 964, 984, 1000, 1007]

# 每组数据的最大值和最小值做差（反应测试时手机的稳定程度）
# 差值 [81 108 97] 在110ms之内
# max_minus_min(list1)
# max_minus_min(list2)
# max_minus_min(list3)

# avg_back = sum(list1) / len(list1)
# avg_home = sum(list2) / len(list2)
# avg_force = sum(list3) / len(list3)
# print(round(a), round(b), round(c))
# 306版本数据（数据整理自oppoR7的3000组启动时间测试）
# back  home  force      场景
# 199   159   983        均值


if __name__ == '__main__':
    create_image()
